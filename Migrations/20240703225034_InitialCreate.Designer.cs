// <auto-generated />
using System;
using ECommerceAppBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceAppBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240703225034_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceAppBackend.Models.ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProducerId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShopCartModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("ProducerId");

                    b.HasIndex("ShopCartModelId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description for Sony Noise Cancelling Headphones",
                            InStock = 45,
                            Name = "Asus Gaming Mouse",
                            Price = 989.71000000000004,
                            SerialNumber = "889799"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description for Canon DSLR Camera",
                            InStock = 60,
                            Name = "Microsoft Surface Pro",
                            Price = 296.48000000000002,
                            SerialNumber = "957749"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description for Logitech Mouse Pro",
                            InStock = 19,
                            Name = "Canon DSLR Camera",
                            Price = 204.80000000000001,
                            SerialNumber = "418881"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description for Logitech Mouse Pro",
                            InStock = 13,
                            Name = "Sony Noise Cancelling Headphones",
                            Price = 34.340000000000003,
                            SerialNumber = "938647"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description for Amazon Echo Dot",
                            InStock = 3,
                            Name = "LG UltraWide Monitor",
                            Price = 507.56,
                            SerialNumber = "161185"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description for Logitech Mouse Pro",
                            InStock = 47,
                            Name = "Dell Inspiron Laptop",
                            Price = 814.21000000000004,
                            SerialNumber = "577542"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description for Logitech Mouse Pro",
                            InStock = 85,
                            Name = "Samsung Smart TV",
                            Price = 165.38,
                            SerialNumber = "230609"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description for Amazon Echo Dot",
                            InStock = 48,
                            Name = "Asus Gaming Mouse",
                            Price = 273.38,
                            SerialNumber = "425166"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description for Asus Gaming Mouse",
                            InStock = 36,
                            Name = "Asus Gaming Mouse",
                            Price = 332.55000000000001,
                            SerialNumber = "483017"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Description for GoPro Hero Action Camera",
                            InStock = 84,
                            Name = "Logitech Mouse Pro",
                            Price = 551.13,
                            SerialNumber = "316862"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Description for JBL Portable Bluetooth Speaker",
                            InStock = 11,
                            Name = "Asus Gaming Mouse",
                            Price = 981.49000000000001,
                            SerialNumber = "995603"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Description for Apple iPhone 13",
                            InStock = 6,
                            Name = "Nintendo Switch",
                            Price = 767.72000000000003,
                            SerialNumber = "123214"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Description for GoPro Hero Action Camera",
                            InStock = 54,
                            Name = "Asus Gaming Mouse",
                            Price = 267.44,
                            SerialNumber = "343905"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Description for Google Nest Thermostat",
                            InStock = 95,
                            Name = "Dell Inspiron Laptop",
                            Price = 379.50999999999999,
                            SerialNumber = "362511"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Description for Lenovo ThinkPad Laptop",
                            InStock = 80,
                            Name = "Dell Inspiron Laptop",
                            Price = 624.78999999999996,
                            SerialNumber = "712048"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Description for Google Nest Thermostat",
                            InStock = 84,
                            Name = "GoPro Hero Action Camera",
                            Price = 469.87,
                            SerialNumber = "157300"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Description for Sony Noise Cancelling Headphones",
                            InStock = 15,
                            Name = "GoPro Hero Action Camera",
                            Price = 209.97,
                            SerialNumber = "573792"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Description for Sony Noise Cancelling Headphones",
                            InStock = 22,
                            Name = "LG UltraWide Monitor",
                            Price = 455.04000000000002,
                            SerialNumber = "158977"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Description for Logitech Mouse Pro",
                            InStock = 90,
                            Name = "JBL Portable Bluetooth Speaker",
                            Price = 543.05999999999995,
                            SerialNumber = "585542"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Description for GoPro Hero Action Camera",
                            InStock = 30,
                            Name = "Lenovo ThinkPad Laptop",
                            Price = 811.82000000000005,
                            SerialNumber = "722857"
                        });
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ItemProducerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemProducerModel");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ItemTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypeModel");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ShopCartModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UserModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("ShopCarts");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ItemModel", b =>
                {
                    b.HasOne("ECommerceAppBackend.Models.ItemTypeModel", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId");

                    b.HasOne("ECommerceAppBackend.Models.ItemProducerModel", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId");

                    b.HasOne("ECommerceAppBackend.Models.ShopCartModel", null)
                        .WithMany("ItemsInCart")
                        .HasForeignKey("ShopCartModelId");

                    b.Navigation("ItemType");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ShopCartModel", b =>
                {
                    b.HasOne("ECommerceAppBackend.Models.UserModel", null)
                        .WithMany("CartHistoryList")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.UserModel", b =>
                {
                    b.HasOne("ECommerceAppBackend.Models.ShopCartModel", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ShopCartModel", b =>
                {
                    b.Navigation("ItemsInCart");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.UserModel", b =>
                {
                    b.Navigation("CartHistoryList");
                });
#pragma warning restore 612, 618
        }
    }
}
