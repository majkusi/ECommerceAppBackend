// <auto-generated />
using System;
using ECommerceAppBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceAppBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240331113431_Added-Sample-Item-Data")]
    partial class AddedSampleItemData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceAppBackend.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ShopCartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopCartId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description for Canon DSLR Camera",
                            InStock = 71,
                            Name = "Garmin GPS Watch",
                            Price = 175.91
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description for JBL Portable Bluetooth Speaker",
                            InStock = 40,
                            Name = "Logitech Mouse Pro",
                            Price = 413.45999999999998
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description for Sony Noise Cancelling Headphones",
                            InStock = 11,
                            Name = "Fitbit Versa Smartwatch",
                            Price = 306.5
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description for Canon DSLR Camera",
                            InStock = 87,
                            Name = "GoPro Hero Action Camera",
                            Price = 712.77999999999997
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description for Philips Coffee Machine",
                            InStock = 42,
                            Name = "Nintendo Switch",
                            Price = 187.28999999999999
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description for Logitech Mouse Pro",
                            InStock = 17,
                            Name = "Asus Gaming Mouse",
                            Price = 737.13999999999999
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description for Dell Inspiron Laptop",
                            InStock = 94,
                            Name = "GoPro Hero Action Camera",
                            Price = 528.48000000000002
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description for Philips Coffee Machine",
                            InStock = 97,
                            Name = "Canon DSLR Camera",
                            Price = 82.219999999999999
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description for Amazon Echo Dot",
                            InStock = 44,
                            Name = "Bose Soundbar",
                            Price = 926.54999999999995
                        },
                        new
                        {
                            Id = 10,
                            Description = "Description for Asus Gaming Mouse",
                            InStock = 77,
                            Name = "HP LaserJet Printer",
                            Price = 108.17
                        },
                        new
                        {
                            Id = 11,
                            Description = "Description for Apple iPhone 13",
                            InStock = 60,
                            Name = "Lenovo ThinkPad Laptop",
                            Price = 476.38
                        },
                        new
                        {
                            Id = 12,
                            Description = "Description for Samsung Smart TV",
                            InStock = 42,
                            Name = "GoPro Hero Action Camera",
                            Price = 957.69000000000005
                        },
                        new
                        {
                            Id = 13,
                            Description = "Description for Canon DSLR Camera",
                            InStock = 20,
                            Name = "LG UltraWide Monitor",
                            Price = 610.40999999999997
                        },
                        new
                        {
                            Id = 14,
                            Description = "Description for Amazon Echo Dot",
                            InStock = 61,
                            Name = "Canon DSLR Camera",
                            Price = 832.89999999999998
                        },
                        new
                        {
                            Id = 15,
                            Description = "Description for Microsoft Surface Pro",
                            InStock = 46,
                            Name = "Bose Soundbar",
                            Price = 604.51999999999998
                        },
                        new
                        {
                            Id = 16,
                            Description = "Description for Google Nest Thermostat",
                            InStock = 20,
                            Name = "HP LaserJet Printer",
                            Price = 169.91
                        },
                        new
                        {
                            Id = 17,
                            Description = "Description for Samsung Smart TV",
                            InStock = 43,
                            Name = "Asus Gaming Mouse",
                            Price = 660.94000000000005
                        },
                        new
                        {
                            Id = 18,
                            Description = "Description for Fitbit Versa Smartwatch",
                            InStock = 96,
                            Name = "Garmin GPS Watch",
                            Price = 34.049999999999997
                        },
                        new
                        {
                            Id = 19,
                            Description = "Description for Asus Gaming Mouse",
                            InStock = 94,
                            Name = "LG UltraWide Monitor",
                            Price = 242.13
                        },
                        new
                        {
                            Id = 20,
                            Description = "Description for Canon DSLR Camera",
                            InStock = 93,
                            Name = "Amazon Echo Dot",
                            Price = 848.62
                        });
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ShopCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShopCarts");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.Item", b =>
                {
                    b.HasOne("ECommerceAppBackend.Models.ShopCart", null)
                        .WithMany("ItemsInCart")
                        .HasForeignKey("ShopCartId");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ShopCart", b =>
                {
                    b.HasOne("ECommerceAppBackend.Models.User", null)
                        .WithMany("CartHistoryList")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.User", b =>
                {
                    b.HasOne("ECommerceAppBackend.Models.ShopCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.ShopCart", b =>
                {
                    b.Navigation("ItemsInCart");
                });

            modelBuilder.Entity("ECommerceAppBackend.Models.User", b =>
                {
                    b.Navigation("CartHistoryList");
                });
#pragma warning restore 612, 618
        }
    }
}
